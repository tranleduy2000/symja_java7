package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules116 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),Times(CN1,b,c,n,Int(Times(x,Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1))),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Greater(n,C0)))),
ISetDelayed(Int(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),x_Symbol),
    Condition(Plus(Times(Sqrt(Plus(C1,Times(Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Plus(n,C1)),-1)),Times(CN1,c,Power(Times(b,Plus(n,C1)),-1),Int(Times(x,Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x))),And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN1)))),
ISetDelayed(Int(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),x_Symbol),
    Condition(Times(Power(Times(b,c),-1),Subst(Int(Times(Power(x,n),Cosh(Plus(Times(a,Power(b,-1)),Times(CN1,x,Power(b,-1))))),x),x,Plus(a,Times(b,ArcSinh(Times(c,x)))))),FreeQ(List(a,b,c,n),x))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(e,Plus(m,C1)),-1)),Times(CN1,b,c,n,Power(Times(e,Plus(m,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1))),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c,d,e,m),x),RationalQ(n)),Greater(n,C0)),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(C1,Times(Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Plus(n,C1)),-1)),Times(CN1,Power(Times(b,Power(c,Plus(m,C1)),Plus(n,C1)),-1),Subst(Int(ExpandTrigReduce(Power(Plus(a,Times(b,x)),Plus(n,C1)),Times(Power(Sinh(x),Plus(m,Negate(C1))),Plus(m,Times(Plus(m,C1),Sqr(Sinh(x))))),x),x),x,ArcSinh(Times(c,x))))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),And(LessEqual(CN2,n),Less(n,CN1))),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Sqrt(Plus(C1,Times(Sqr(c),Sqr(x)))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Plus(n,C1)),-1)),Times(CN1,m,Power(Times(b,c,Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x)),Times(CN1,c,Plus(m,C1),Power(Times(b,Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x))),And(And(And(FreeQ(List(a,b,c),x),RationalQ(n)),Less(n,CN2)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(And(And(FreeQ(List(a,b,c,d,e),x),RationalQ(n)),Less(n,CN1)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,Plus(m,C1)),-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Cosh(x),Power(Plus(Times(c,d),Times(e,Sinh(x))),m)),x),x,ArcSinh(Times(c,x)))),And(And(FreeQ(List(a,b,c,d,e,n),x),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(n))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Integrate(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),FreeQ(List(a,b,c,d,e,m,n),x))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(And(And(FreeQ(List(a,b,c,d,e,m),x),IntegerQ(p)),PositiveIntegerQ(n)),Or(PositiveIntegerQ(p),NonzeroQ(a))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Integrate(Times(Power(x,m),Power(Plus(d,Times(e,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),FreeQ(List(a,b,c,d,e,m,n,p),x))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),And(And(FreeQ(List(a,b,c,d,e,f,g,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_),Power(Plus(f_,Times(g_DEFAULT,x_)),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(d,Times(e,x))),Sqrt(Plus(f,Times(g,x))),Power(Plus(Times(d,f),Times(e,g,Sqr(x))),CN1D2),Int(Times(Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(FreeQ(List(a,b,c,d,e,f,g,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_),Power(Plus(f_,Times(g_DEFAULT,x_)),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(d,f),Times(e,g,Sqr(x)))),Power(Times(Sqrt(Plus(d,Times(e,x))),Sqrt(Plus(f,Times(g,x)))),-1),Int(Times(Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(FreeQ(List(a,b,c,d,e,f,g,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),NegativeIntegerQ(Plus(p,Negate(C1D2)))))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcSinh(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,d,e,f,g),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(Plus(d_,Times(e_DEFAULT,x_)),p_),Power(Plus(f_,Times(g_DEFAULT,x_)),p_)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcSinh(Times(c,x)))),u,x),Times(CN1,b,c,Int(Dist(Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2),u,x),x)))),And(FreeQ(List(a,b,c,d,e,f,g),x),NegativeIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(FreeQ(List(a,b,c,d,e,f,g,n),x),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Integrate(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),FreeQ(List(a,b,c,d,e,f,g,n,p),x))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Power(Plus(d,Times(e,Sqr(x))),p),x)))),Plus(Dist(Plus(a,Times(b,ArcSinh(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,d,e),x),Or(PositiveIntegerQ(p),NegativeIntegerQ(Plus(p,C1D2)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),CN1D2)),x_Symbol),
    Condition(Times(Power(Times(b,c,Sqrt(d)),-1),Subst(Int(Power(x,n),x),x,Plus(a,Times(b,ArcSinh(Times(c,x)))))),And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Plus(Times(C2,p),C1),-1)),Times(CN1,b,c,n,Sqrt(d),Power(Plus(Times(C2,p),C1),-1),Int(Times(x,Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(C2,d,p,Power(Plus(Times(C2,p),C1),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(n)),Greater(n,C0)),Greater(p,C0)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),-1)),x_Symbol),
    Condition(Times(Power(Times(c,d),-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Sech(x)),x),x,ArcSinh(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),QQ(-3L,2L))),x_Symbol),
    Condition(Plus(Times(x,Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(d,Sqrt(Plus(d,Times(e,Sqr(x))))),-1)),Times(CN1,b,c,n,Power(d,CN1D2),Int(Times(x,Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),-1)),x))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),RationalQ(n)),Greater(n,C0)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,x,Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(C2,d,Plus(p,C1)),-1)),Times(b,c,n,Power(Times(C2,Sqrt(d),Plus(p,C1)),-1),Int(Times(x,Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(Plus(Times(C2,p),C3),Power(Times(C2,d,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(n)),Greater(n,C0)),Less(p,CN1)),Unequal(p,QQ(-2L,3L))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1)),Times(CN1,e,Plus(Times(C2,p),C1),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1),Int(Times(x,Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(n)),Less(n,CN1)),Unequal(p,CN1D2)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(d,p),Power(c,-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Power(Cosh(x),Plus(Times(C2,p),C1))),x),x,ArcSinh(Times(c,x)))),And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveIntegerQ(Times(C2,p))),PositiveQ(d)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(d,p),Int(Times(Power(Plus(C1,Times(Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(p)),Not(PositiveQ(d))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(Power(d,Plus(p,Negate(C1D2))),Sqrt(Plus(d,Times(e,Sqr(x)))),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveIntegerQ(Plus(p,C1D2))),Not(PositiveQ(d))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(Power(d,Plus(p,C1D2)),Sqrt(Plus(C1,Times(Sqr(c),Sqr(x)))),Power(Plus(d,Times(e,Sqr(x))),CN1D2),Int(Times(Power(Plus(C1,Times(Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),NegativeIntegerQ(Plus(p,Negate(C1D2)))),Not(PositiveQ(d))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(FreeQ(List(a,b,c,d,e,n),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(Sqrt(d),Times(CN1,Sqrt(Negate(e)),x)),p),Power(Plus(Sqrt(d),Times(Sqrt(Negate(e)),x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(And(FreeQ(List(a,b,c,d,e,n),x),NegativeIntegerQ(p)),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Integrate(Times(Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),FreeQ(List(a,b,c,d,e,n,p),x))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),And(And(FreeQ(List(a,b,c,d,e,f,g,m,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_),Power(Plus(f_,Times(g_DEFAULT,x_)),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(d,Times(e,x))),Sqrt(Plus(f,Times(g,x))),Power(Plus(Times(d,f),Times(e,g,Sqr(x))),CN1D2),Int(Times(Power(x,m),Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(FreeQ(List(a,b,c,d,e,f,g,m,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_),Power(Plus(f_,Times(g_DEFAULT,x_)),p_)),x_Symbol),
    Condition(Times(Sqrt(Plus(Times(d,f),Times(e,g,Sqr(x)))),Power(Times(Sqrt(Plus(d,Times(e,x))),Sqrt(Plus(f,Times(g,x)))),-1),Int(Times(Power(x,m),Power(Plus(Times(d,f),Times(e,g,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(FreeQ(List(a,b,c,d,e,f,g,m,n),x),ZeroQ(Plus(Times(e,f),Times(d,g)))),NegativeIntegerQ(Plus(p,Negate(C1D2)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),x),And(FreeQ(List(a,b,c,d,e,f,g,m,n),x),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),p_DEFAULT),Power(Plus(f_,Times(g_DEFAULT,x_)),p_DEFAULT)),x_Symbol),
    Condition(Integrate(Times(Power(x,m),Power(Plus(d,Times(e,x)),p),Power(Plus(f,Times(g,x)),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x),FreeQ(List(a,b,c,d,e,f,g,m,n,p),x))),
ISetDelayed(Int(Times(x_,Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Plus(a,Times(b,ArcSinh(Times(c,x)))),Power(Times(C2,e,Plus(p,C1)),-1)),Times(CN1,b,c,Power(Times(C2,e,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x))),And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),p)),x)))),Plus(Dist(Plus(a,Times(b,ArcSinh(Times(c,x)))),u,x),Times(CN1,b,c,Int(SimplifyIntegrand(Times(u,Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2)),x),x)))),And(FreeQ(List(a,b,c,d,e,m,p),x),Or(Or(And(PositiveIntegerQ(p),Not(And(NegativeIntegerQ(Times(C1D2,Plus(m,Negate(C1)))),Greater(Plus(m,Times(C2,p),C3),C0)))),And(PositiveIntegerQ(Times(C1D2,Plus(m,C1))),Not(And(NegativeIntegerQ(p),Greater(Plus(m,Times(C2,p),C3),C0))))),And(NegativeIntegerQ(Times(C1D2,Plus(m,Times(C2,p),C1))),Not(NegativeIntegerQ(Times(C1D2,Plus(m,Negate(C1)))))))))),
ISetDelayed(Int(Times(x_,Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(C2,e,Plus(p,C1)),-1)),Times(CN1,b,n,Power(Times(C2,c,Sqrt(d),Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(n)),Greater(n,C0)),Unequal(p,CN1)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Plus(m,C1),-1)),Times(CN1,b,c,Sqrt(d),n,Power(Plus(m,C1),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(CN1,C2,e,p,Power(Plus(m,C1),-1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),Greater(p,C0)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Plus(m,Times(C2,p),C1),-1)),Times(CN1,b,c,n,Sqrt(d),Power(Plus(m,Times(C2,p),C1),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(C2,d,p,Power(Plus(m,Times(C2,p),C1),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),Greater(p,C0)),Unequal(Plus(m,Times(C2,p),C1),C0)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(d,Plus(m,C1)),-1)),Times(CN1,b,c,n,Power(Times(Sqrt(d),Plus(m,C1)),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),Less(p,C0)),Unequal(m,CN1)),Equal(Plus(m,Times(C2,p),C3),C0)))),
ISetDelayed(Int(Times(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(x_,m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),CN1D2)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(a,Times(b,ArcSinh(Times(c,x)))),Hypergeometric2F1(C1D2,Times(C1D2,Plus(m,C1)),Times(C1D2,Plus(m,C3)),Times(CN1,Sqr(c),Sqr(x))),Power(Times(Sqrt(d),Plus(m,C1)),-1)),Times(CN1,b,c,Power(x,Plus(m,C2)),HypergeometricPFQ(List(C1,Plus(C1,Times(C1D2,m)),Plus(C1,Times(C1D2,m))),List(Plus(QQ(3L,2L),Times(C1D2,m)),Plus(C2,Times(C1D2,m))),Times(CN1,Sqr(c),Sqr(x))),Power(Times(Sqrt(d),Plus(m,C1),Plus(m,C2)),-1))),And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),-1)),x_Symbol),
    Condition(Times(Power(Times(Power(c,Plus(m,C1)),d),-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Power(Sinh(x),m),Sech(x)),x),x,ArcSinh(Times(c,x)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),PositiveIntegerQ(n)),IntegerQ(m)),Equal(Sqr(m),C1)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(e,Plus(m,Times(C2,p),C1)),-1)),Times(CN1,b,c,Sqrt(d),n,Power(Times(e,Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(CN1,Plus(m,Negate(C1)),Power(Times(Sqr(c),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(x,Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),And(LessEqual(CN1,p),Less(p,C0))),Greater(m,C1)),NonzeroQ(Plus(m,Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(C2,e,Plus(p,C1)),-1)),Times(CN1,b,n,Power(Times(C2,c,Sqrt(d),Plus(p,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(CN1,Plus(m,Negate(C1)),Power(Times(C2,e,Plus(p,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),Less(p,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Times(x_,Sqrt(Plus(d_,Times(e_DEFAULT,Sqr(x_))))),-1),ArcSinh(Times(c_DEFAULT,x_))),x_Symbol),
    Condition(Plus(Times(C2,ArcSinh(Times(c,x)),ArcTanh(Plus(Times(c,x),Negate(Sqrt(Plus(C1,Times(Sqr(c),Sqr(x))))))),Power(d,CN1D2)),Times(PolyLog(C2,Plus(Times(c,x),Negate(Sqrt(Plus(C1,Times(Sqr(c),Sqr(x))))))),Power(d,CN1D2)),Times(CN1,PolyLog(C2,Plus(Times(CN1,c,x),Sqrt(Plus(C1,Times(Sqr(c),Sqr(x)))))),Power(d,CN1D2))),And(And(FreeQ(List(c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)))),
ISetDelayed(Int(Times(Plus(a_,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),Power(Times(x_,Sqrt(Plus(d_,Times(e_DEFAULT,Sqr(x_))))),-1)),x_Symbol),
    Condition(Plus(Times(a,Int(Power(Times(x,Sqrt(Plus(d,Times(e,Sqr(x))))),-1),x)),Times(b,Int(Times(ArcSinh(Times(c,x)),Power(Times(x,Sqrt(Plus(d,Times(e,Sqr(x))))),-1)),x))),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)))),
ISetDelayed(Int(Times(Power(x_,-1),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Sqr(c),Int(Times(x,Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),Times(Power(d,-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(x,-1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(n)),Greater(n,C0)),Less(p,CN1)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Times(d,Plus(m,C1)),-1)),Times(CN1,b,c,n,Power(Times(Sqrt(d),Plus(m,C1)),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,Negate(C1)))),x)),Times(CN1,Sqr(c),Plus(m,Times(C2,p),C3),Power(Plus(m,C1),-1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Greater(n,C0)),Less(p,C0)),Less(m,CN1)),Unequal(Plus(m,Times(C2,p),C3),C0)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),CN1D2)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1)),Times(CN1,m,Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1))),x))),And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),RationalQ(n)),Less(n,CN1)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1)),Times(CN1,d,m,Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Less(n,CN1)),Equal(Plus(m,Times(C2,p),C1),C0)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1)),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1)),Times(CN1,d,m,Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1))),x)),Times(CN1,e,Plus(m,Times(C2,p),C1),Power(Times(b,c,Sqrt(d),Plus(n,C1)),-1),Int(Times(Power(x,Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(p,Negate(C1D2))),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),Plus(n,C1))),x))),And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(Times(C2,p))),PositiveQ(d)),RationalQ(m,n)),Less(n,CN1)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(Power(d,-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1)),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),Times(CN1,e,Power(d,-1),Int(Times(Power(x,Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x))),And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),NegativeIntegerQ(Plus(p,C1D2))),PositiveQ(d)),NegativeIntegerQ(Times(C1D2,Plus(m,Negate(C1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),CN1D2)),x_Symbol),
    Condition(Times(Power(Times(Power(c,Plus(m,C1)),Sqrt(d)),-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Power(Sinh(x),m)),x),x,ArcSinh(Times(c,x)))),And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveQ(d)),IntegerQ(m)),Or(Greater(m,C0),PositiveIntegerQ(n))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(d,p),Power(Power(c,Plus(m,C1)),-1),Subst(Int(Times(Power(Plus(a,Times(b,x)),n),Power(Sinh(x),m),Power(Cosh(x),Plus(Times(C2,p),C1))),x),x,ArcSinh(Times(c,x)))),And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveIntegerQ(Times(C2,p))),PositiveQ(d)),PositiveIntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n),Power(Plus(d,Times(e,Sqr(x))),CN1D2)),Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(p,C1D2))),x),x),And(And(And(And(FreeQ(List(a,b,c,d,e,m,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveIntegerQ(Plus(p,C1D2))),PositiveQ(d)),Not(PositiveIntegerQ(Times(C1D2,Plus(m,C1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(Power(d,p),Int(Times(Power(x,m),Power(Plus(C1,Times(Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),IntegerQ(p)),Not(PositiveQ(d))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,ArcSinh(Times(c_DEFAULT,x_)))),n_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Times(Power(d,Plus(p,Negate(C1D2))),Sqrt(Plus(d,Times(e,Sqr(x)))),Power(Plus(C1,Times(Sqr(c),Sqr(x))),CN1D2),Int(Times(Power(x,m),Power(Plus(C1,Times(Sqr(c),Sqr(x))),p),Power(Plus(a,Times(b,ArcSinh(Times(c,x)))),n)),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n),x),ZeroQ(Plus(e,Times(CN1,Sqr(c),d)))),PositiveIntegerQ(Plus(p,C1D2))),Not(PositiveQ(d)))))
  );
}
