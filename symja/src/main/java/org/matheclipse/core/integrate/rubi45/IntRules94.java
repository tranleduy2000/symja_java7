package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules94 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(CN1,e,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1))),And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(e,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1))),And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Sqr(e),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),n),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(CN1,e,n,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Sin(Plus(d,Times(e,x))),Plus(n,Negate(C1))),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(n,Plus(n,Negate(C1)),Sqr(e),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),Plus(n,Negate(C2)))),x))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(n)),Greater(n,C1)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_)),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),m),Power(Plus(Times(Sqr(e),Sqr(m)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(e,m,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Cos(Plus(d,Times(e,x))),Plus(m,Negate(C1))),Power(Plus(Times(Sqr(e),Sqr(m)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(m,Plus(m,Negate(C1)),Sqr(e),Power(Plus(Times(Sqr(e),Sqr(m)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),Plus(m,Negate(C2)))),x))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(m)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(m)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),Plus(n,C2)),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1)),Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Sin(Plus(d,Times(e,x))),Plus(n,C1)),Power(Times(e,Plus(n,C1)),-1))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),ZeroQ(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),NonzeroQ(Plus(n,C1))),NonzeroQ(Plus(n,C2))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),Plus(n,C2)),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1)),Times(CN1,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Cos(Plus(d,Times(e,x))),Plus(n,C1)),Power(Times(e,Plus(n,C1)),-1))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),ZeroQ(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),NonzeroQ(Plus(n,C1))),NonzeroQ(Plus(n,C2))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),Plus(n,C2)),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1)),Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Sin(Plus(d,Times(e,x))),Plus(n,C1)),Power(Times(e,Plus(n,C1)),-1)),Times(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),Plus(n,C2))),x))),And(And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(n)),Less(n,CN1)),Unequal(n,CN2)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),Plus(n,C2)),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1)),Times(CN1,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Cos(Plus(d,Times(e,x))),Plus(n,C1)),Power(Times(e,Plus(n,C1)),-1)),Times(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),Power(Times(Sqr(e),Plus(n,C1),Plus(n,C2)),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),Plus(n,C2))),x))),And(And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(Plus(n,C2))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(n)),Less(n,CN1)),Unequal(n,CN2)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Times(Power(E,Times(CI,n,Plus(d,Times(e,x)))),Power(Sin(Plus(d,Times(e,x))),n),Power(Power(Plus(CN1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(CN1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),Power(Power(E,Times(CI,n,Plus(d,Times(e,x)))),-1)),x)),And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),Not(IntegerQ(n))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Times(Power(E,Times(CI,n,Plus(d,Times(e,x)))),Power(Cos(Plus(d,Times(e,x))),n),Power(Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),Power(Power(E,Times(CI,n,Plus(d,Times(e,x)))),-1)),x)),And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),Not(IntegerQ(n))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Tan(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(CI,n),Int(ExpandIntegrand(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(C1,Negate(Power(E,Times(C2,CI,Plus(d,Times(e,x)))))),n),Power(Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),-1)),x),x)),And(FreeQ(List(FSymbol,a,b,c,d,e),x),IntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cot(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Negate(CI),n),Int(ExpandIntegrand(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),Power(Power(Plus(C1,Negate(Power(E,Times(C2,CI,Plus(d,Times(e,x)))))),n),-1)),x),x)),And(FreeQ(List(FSymbol,a,b,c,d,e),x),IntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sec(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),n),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(CN1,e,n,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,C1)),Sin(Plus(d,Times(e,x))),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(Sqr(e),n,Plus(n,C1),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,C2))),x))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(n)),Less(n,CN1)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Csc(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),n),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(e,n,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,C1)),Cos(Plus(d,Times(e,x))),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1)),Times(Sqr(e),n,Plus(n,C1),Power(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,C2))),x))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(e),Sqr(n)),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))))),RationalQ(n)),Less(n,CN1)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sec(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,Negate(C2))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1)),Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,Negate(C1))),Sin(Plus(d,Times(e,x))),Power(Times(e,Plus(n,Negate(C1))),-1))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),ZeroQ(Plus(Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol))),Times(Sqr(e),Sqr(Plus(n,Negate(C2))))))),NonzeroQ(Plus(n,Negate(C1)))),NonzeroQ(Plus(n,Negate(C2)))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Csc(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,Negate(C2))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1)),Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,Negate(C1))),Cos(Plus(d,Times(e,x))),Power(Times(e,Plus(n,Negate(C1))),-1))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,n),x),ZeroQ(Plus(Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol))),Times(Sqr(e),Sqr(Plus(n,Negate(C2))))))),NonzeroQ(Plus(n,Negate(C1)))),NonzeroQ(Plus(n,Negate(C2)))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sec(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,Negate(C2))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1)),Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,Negate(C1))),Sin(Plus(d,Times(e,x))),Power(Times(e,Plus(n,Negate(C1))),-1)),Times(Plus(Times(Sqr(e),Sqr(Plus(n,Negate(C2)))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sec(Plus(d,Times(e,x))),Plus(n,Negate(C2)))),x))),And(And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol))),Times(Sqr(e),Sqr(Plus(n,Negate(C2))))))),RationalQ(n)),Greater(n,C1)),Unequal(n,C2)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Csc(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_)),x_Symbol),
    Condition(Plus(Times(CN1,b,c,Log(FSymbol),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,Negate(C2))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1)),Times(CN1,Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,Negate(C1))),Cos(Plus(d,Times(e,x))),Power(Times(e,Plus(n,Negate(C1))),-1)),Times(Plus(Times(Sqr(e),Sqr(Plus(n,Negate(C2)))),Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol)))),Power(Times(Sqr(e),Plus(n,Negate(C1)),Plus(n,Negate(C2))),-1),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Csc(Plus(d,Times(e,x))),Plus(n,Negate(C2)))),x))),And(And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),NonzeroQ(Plus(Times(Sqr(b),Sqr(c),Sqr(Log(FSymbol))),Times(Sqr(e),Sqr(Plus(n,Negate(C2))))))),RationalQ(n)),Greater(n,C1)),Unequal(n,C2)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sec(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(C2,n),Power(E,Times(CI,n,Plus(d,Times(e,x)))),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(Times(CI,e,n),Times(b,c,Log(FSymbol))),-1),Hypergeometric2F1(n,Plus(Times(C1D2,n),Times(CN1,CI,b,c,Log(FSymbol),Power(Times(C2,e),-1))),Plus(C1,Times(C1D2,n),Times(CN1,CI,b,c,Log(FSymbol),Power(Times(C2,e),-1))),Negate(Power(E,Times(C2,CI,Plus(d,Times(e,x))))))),And(FreeQ(List(FSymbol,a,b,c,d,e),x),IntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Csc(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Times(CN2,CI),n),Power(E,Times(CI,n,Plus(d,Times(e,x)))),Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Plus(Times(CI,e,n),Times(b,c,Log(FSymbol))),-1),Hypergeometric2F1(n,Plus(Times(C1D2,n),Times(CN1,CI,b,c,Log(FSymbol),Power(Times(C2,e),-1))),Plus(C1,Times(C1D2,n),Times(CN1,CI,b,c,Log(FSymbol),Power(Times(C2,e),-1))),Power(E,Times(C2,CI,Plus(d,Times(e,x)))))),And(FreeQ(List(FSymbol,a,b,c,d,e),x),IntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Sec(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),Power(Sec(Plus(d,Times(e,x))),n),Power(Power(E,Times(CI,n,Plus(d,Times(e,x)))),-1),Int(SimplifyIntegrand(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(E,Times(CI,n,Plus(d,Times(e,x)))),Power(Power(Plus(C1,Power(E,Times(C2,CI,Plus(d,Times(e,x))))),n),-1)),x),x)),And(FreeQ(List(FSymbol,a,b,c,d,e),x),Not(IntegerQ(n))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Csc(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(C1,Negate(Power(E,Times(CN2,CI,Plus(d,Times(e,x)))))),n),Power(Csc(Plus(d,Times(e,x))),n),Power(Power(E,Times(CN1,CI,n,Plus(d,Times(e,x)))),-1),Int(SimplifyIntegrand(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(E,Times(CN1,CI,n,Plus(d,Times(e,x)))),Power(Power(Plus(C1,Negate(Power(E,Times(CN2,CI,Plus(d,Times(e,x)))))),n),-1)),x),x)),And(FreeQ(List(FSymbol,a,b,c,d,e),x),Not(IntegerQ(n))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(C2,n),Power(f,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(Times(C1D2,d),Times(e,C1D2,x),Times(CN1,f,Pi,Power(Times(C4,g),-1)))),Times(C2,n))),x)),And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(Sqr(f),Negate(Sqr(g))))),NegativeIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(C2,n),Power(f,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(Times(C1D2,d),Times(e,C1D2,x))),Times(C2,n))),x)),And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(f,Negate(g)))),NegativeIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT)),x_Symbol),
    Condition(Times(Power(C2,n),Power(f,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(Times(C1D2,d),Times(e,C1D2,x))),Times(C2,n))),x)),And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(f,g))),NegativeIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(g,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Tan(Plus(Times(f,Pi,Power(Times(C4,g),-1)),Times(CN1,C1D2,d),Times(CN1,e,C1D2,x))),m)),x)),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(Sqr(f),Negate(Sqr(g))))),IntegersQ(m,n)),Equal(Plus(m,n),C0)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Tan(Plus(Times(C1D2,d),Times(e,C1D2,x))),m)),x)),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(f,Negate(g)))),IntegersQ(m,n)),Equal(Plus(m,n),C0)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),n_DEFAULT),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(f,n),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cot(Plus(Times(C1D2,d),Times(e,C1D2,x))),m)),x)),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),ZeroQ(Plus(f,g))),IntegersQ(m,n)),Equal(Plus(m,n),C0)))),
ISetDelayed(Int(Times(Plus(h_,Times(i_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),-1)),x_Symbol),
    Condition(Plus(Times(C2,i,Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Cos(Plus(d,Times(e,x))),Power(Plus(f,Times(g,Sin(Plus(d,Times(e,x))))),-1)),x)),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Plus(h,Times(CN1,i,Cos(Plus(d,Times(e,x))))),Power(Plus(f,Times(g,Sin(Plus(d,Times(e,x))))),-1)),x)),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g,h,i),x),ZeroQ(Plus(Sqr(f),Negate(Sqr(g))))),ZeroQ(Plus(Sqr(h),Negate(Sqr(i))))),ZeroQ(Plus(Times(g,h),Times(CN1,f,i)))))),
ISetDelayed(Int(Times(Plus(h_,Times(i_DEFAULT,Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Plus(f_,Times(g_DEFAULT,Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))))),-1)),x_Symbol),
    Condition(Plus(Times(C2,i,Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Sin(Plus(d,Times(e,x))),Power(Plus(f,Times(g,Cos(Plus(d,Times(e,x))))),-1)),x)),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Plus(h,Times(CN1,i,Sin(Plus(d,Times(e,x))))),Power(Plus(f,Times(g,Cos(Plus(d,Times(e,x))))),-1)),x)),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e,f,g,h,i),x),ZeroQ(Plus(Sqr(f),Negate(Sqr(g))))),ZeroQ(Plus(Sqr(h),Negate(Sqr(i))))),ZeroQ(Plus(Times(g,h),Times(f,i)))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,u_)),Power($(G_,v_),n_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(FSymbol,Times(c,ExpandToSum(u,x))),Power(G(ExpandToSum(v,x)),n)),x),And(And(And(FreeQ(List(FSymbol,c,n),x),TrigQ(GSymbol)),LinearQ(List(u,v),x)),Not(LinearMatchQ(List(u,v),x))))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Sin(Plus(d,Times(e,x))),n)),x)))),Plus(Dist(Power(x,m),u,x),Times(CN1,m,Int(Times(Power(x,Plus(m,Negate(C1))),u),x)))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),RationalQ(m)),Greater(m,C0)),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(x_,m_DEFAULT),Power(Cos(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(u,Block(List(Set($s("§showsteps"),False),Set($s("§stepcounter"),Null)),Int(Times(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Power(Cos(Plus(d,Times(e,x))),n)),x)))),Plus(Dist(Power(x,m),u,x),Times(CN1,m,Int(Times(Power(x,Plus(m,Negate(C1))),u),x)))),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),RationalQ(m)),Greater(m,C0)),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(Cos(Plus(f_DEFAULT,Times(g_DEFAULT,x_))),n_DEFAULT),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigReduce(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Times(Power(Sin(Plus(d,Times(e,x))),m),Power(Cos(Plus(f,Times(g,x))),n)),x),x),And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),PositiveIntegerQ(m,n)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power(x_,p_DEFAULT),Power(Cos(Plus(f_DEFAULT,Times(g_DEFAULT,x_))),n_DEFAULT),Power(Sin(Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigReduce(Times(Power(x,p),Power(FSymbol,Times(c,Plus(a,Times(b,x))))),Times(Power(Sin(Plus(d,Times(e,x))),m),Power(Cos(Plus(f,Times(g,x))),n)),x),x),And(FreeQ(List(FSymbol,a,b,c,d,e,f,g),x),PositiveIntegerQ(m,n,p)))),
ISetDelayed(Int(Times(Power(F_,Times(c_DEFAULT,Plus(a_DEFAULT,Times(b_DEFAULT,x_)))),Power($(G_,Plus(d_DEFAULT,Times(e_DEFAULT,x_))),m_DEFAULT),Power($($p("H"),Plus(d_DEFAULT,Times(e_DEFAULT,x_))),n_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigToExp(Power(FSymbol,Times(c,Plus(a,Times(b,x)))),Times(Power(G(Plus(d,Times(e,x))),m),Power(H(Plus(d,Times(e,x))),n)),x),x),And(And(And(FreeQ(List(FSymbol,a,b,c,d,e),x),PositiveIntegerQ(m,n)),TrigQ(GSymbol)),TrigQ($s("H"))))),
ISetDelayed(Int(Times(Power(F_,u_),Power(Sin(v_),n_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigToExp(Power(FSymbol,u),Power(Sin(v),n),x),x),And(And(And(FreeQ(FSymbol,x),Or(LinearQ(u,x),QuadraticQ(u,x))),Or(LinearQ(v,x),QuadraticQ(v,x))),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,u_),Power(Cos(v_),n_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigToExp(Power(FSymbol,u),Power(Cos(v),n),x),x),And(And(And(FreeQ(FSymbol,x),Or(LinearQ(u,x),QuadraticQ(u,x))),Or(LinearQ(v,x),QuadraticQ(v,x))),PositiveIntegerQ(n)))),
ISetDelayed(Int(Times(Power(F_,u_),Power(Cos(v_),n_DEFAULT),Power(Sin(v_),m_DEFAULT)),x_Symbol),
    Condition(Int(ExpandTrigToExp(Power(FSymbol,u),Times(Power(Sin(v),m),Power(Cos(v),n)),x),x),And(And(And(FreeQ(FSymbol,x),Or(LinearQ(u,x),QuadraticQ(u,x))),Or(LinearQ(v,x),QuadraticQ(v,x))),PositiveIntegerQ(m,n))))
  );
}
