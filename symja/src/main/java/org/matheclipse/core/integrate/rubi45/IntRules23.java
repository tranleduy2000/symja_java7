package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules23 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_)),x_Symbol),
    Condition(Times(d,Power(x,Plus(m,Negate(n),C1)),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(b,Plus(m,Times(n,p),C1)),-1)),And(And(And(FreeQ(List(b,c,d,e,m,n,p),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1))))),NonzeroQ(Plus(m,Times(n,p),C1))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_)),x_Symbol),
    Condition(Plus(Times(d,Power(x,Plus(m,Negate(n),C1)),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(b,Plus(m,Times(n,p),C1)),-1)),Times(Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,n,Times(C2,n,p),C1))),Power(Times(b,Plus(m,Times(n,p),C1)),-1),Int(Times(Power(x,Plus(m,n)),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p)),x))),And(And(And(And(And(And(FreeQ(List(b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(b,e),Times(CN1,c,d)))),NonzeroQ(Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,n,Times(C2,n,p),C1))))),RationalQ(m,n,p)),Less(Plus(m,Times(n,p)),CN1)),Greater(n,C0)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_)),x_Symbol),
    Condition(Plus(Times(Plus(Times(b,e),Times(CN1,c,d)),Power(x,Plus(m,Negate(n),C1)),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(b,c,n,Plus(p,C1)),-1)),Times(CN1,Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,Times(n,p),Times(n,Plus(p,C1)),C1))),Power(Times(b,c,n,Plus(p,C1)),-1),Int(Times(Power(x,Plus(m,Negate(n))),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(b,e),Times(CN1,c,d)))),NonzeroQ(Plus(Times(b,e,Plus(m,C1)),Times(CN1,c,d,Plus(m,Times(n,Plus(p,C1)),C1))))),RationalQ(m,n,p)),And(Less(C0,n),LessEqual(n,m))),Less(p,CN1)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_)),x_Symbol),
    Condition(Plus(Times(e,Power(x,Plus(m,Negate(n),C1)),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(c,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1)),Times(CN1,Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1))),Power(Times(c,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1),Int(Times(Power(x,m),Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p)),x))),And(And(And(FreeQ(List(b,c,d,e,m,n,p),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(b,e,Plus(m,Times(n,p),C1)),Times(CN1,c,d,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1))))),NonzeroQ(Plus(m,Times(n,Plus(Times(C2,p),C1)),C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT),Power(Plus(Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_)),x_Symbol),
    Condition(Times(Power(Plus(Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p),Power(Times(Power(x,Times(n,p)),Power(Plus(b,Times(c,Power(x,n))),p)),-1),Int(Times(Power(x,Plus(m,Times(n,p))),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(b,Times(c,Power(x,n))),p)),x)),And(And(FreeQ(List(b,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(n,-1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,-1))),Negate(C1))),Power(Plus(d,Times(e,x)),q),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x),x,Power(x,n))),And(And(FreeQ(List(a,b,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),IntegerQ(Simplify(Times(Plus(m,C1),Power(n,-1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(n,-1),Subst(Int(Times(Power(x,Plus(Simplify(Times(Plus(m,C1),Power(n,-1))),Negate(C1))),Power(Plus(d,Times(e,x)),q),Power(Plus(a,Times(c,Sqr(x))),p)),x),x,Power(x,n))),And(And(FreeQ(List(a,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),IntegerQ(Simplify(Times(Plus(m,C1),Power(n,-1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(Power(c,p),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(Times(C1D2,b),Times(c,Power(x,n))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n))))),Power(Times(Power(Times(C4,c),Plus(p,Negate(C1D2))),Plus(b,Times(C2,c,Power(x,n)))),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(b,Times(C2,c,Power(x,n))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(Plus(p,C1D2))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Plus(b,Times(C2,c,Power(x,n))),Power(Times(Power(Times(C4,c),Plus(p,C1D2)),Sqrt(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))))),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(b,Times(C2,c,Power(x,n))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NegativeIntegerQ(Plus(p,Negate(C1D2)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p),Power(Power(Plus(b,Times(C2,c,Power(x,n))),Times(C2,p)),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(b,Times(C2,c,Power(x,n))),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(Times(C2,p)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),Power(x,n))),p)),x),And(And(And(And(FreeQ(List(a,b,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),Power(x,n))),p)),x),And(And(And(FreeQ(List(a,c,d,e,q,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p),Power(Times(Power(Plus(d,Times(e,Power(x,n))),p),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(x,n),Power(e,-1))),p)),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),Power(x,n))),p)),x)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(c,Power(x,Times(C2,n)))),p),Power(Times(Power(Plus(d,Times(e,Power(x,n))),p),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(x,n),Power(e,-1))),p)),-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),Power(x,n))),p)),x)),And(And(And(FreeQ(List(a,c,d,e,m,n,p,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p)),x),x),And(And(And(FreeQ(List(a,b,c,d,e,m,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),p)),x),x),And(And(FreeQ(List(a,c,d,e,m,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(p)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),n))),Times(Power(g,-1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,-1)),Negate(C1))),Power(Plus(d,Times(e,Power(x,Times(n,Power(g,-1))))),q),Power(Plus(a,Times(b,Power(x,Times(n,Power(g,-1)))),Times(c,Power(x,Times(C2,n,Power(g,-1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),RationalQ(m,n,p)),Not(PositiveIntegerQ(p))),Unequal(Plus(m,C1),C0)),Or(Not(PositiveIntegerQ(n)),And(And(Less(Less(C0,Plus(m,C1)),Times(C2,n)),And(LessEqual(CN1,p),Less(p,C0))),Not(And(IntegerQ(m),CoprimeQ(Plus(m,C1),n)))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Gcd(Plus(m,C1),n))),Times(Power(g,-1),Subst(Int(Times(Power(x,Plus(Times(Plus(m,C1),Power(g,-1)),Negate(C1))),Power(Plus(d,Times(e,Power(x,Times(n,Power(g,-1))))),q),Power(Plus(a,Times(c,Power(x,Times(C2,n,Power(g,-1))))),p)),x),x,Power(x,g)))),And(And(And(And(And(FreeQ(List(a,c,d,e,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),RationalQ(m,n,p)),Not(PositiveIntegerQ(p))),Unequal(Plus(m,C1),C0)),Or(Not(PositiveIntegerQ(n)),And(And(Less(Less(C0,Plus(m,C1)),Times(C2,n)),And(LessEqual(CN1,p),Less(p,C0))),Not(And(IntegerQ(m),CoprimeQ(Plus(m,C1),n)))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(n,Power(Plus(m,C1),-1))))),Condition(Times(Power(Plus(m,C1),-1),Subst(Int(Times(Power(Plus(d,Times(e,Power(x,g))),q),Power(Plus(a,Times(b,Power(x,g)),Times(c,Power(x,Times(C2,g)))),p)),x),x,Power(x,Plus(m,C1)))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(n)))))),And(And(And(And(FreeQ(List(a,b,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Module(List(Set(g,Simplify(Times(n,Power(Plus(m,C1),-1))))),Condition(Times(Power(Plus(m,C1),-1),Subst(Int(Times(Power(Plus(d,Times(e,Power(x,g))),q),Power(Plus(a,Times(c,Power(x,Times(C2,g)))),p)),x),x,Power(x,Plus(m,C1)))),And(IntegerQ(g),Or(Greater(g,C0),Not(PositiveIntegerQ(n)))))),And(And(And(And(FreeQ(List(a,c,d,e,m,n,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(Times(x_,Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_)))),-1)),x_Symbol),
    Condition(Plus(Times(d,Log(x),Power(a,-1)),Times(Power(a,-1),Int(Times(Power(x,Plus(n,Negate(C1))),Simp(Plus(Times(a,e),Times(CN1,b,d),Times(CN1,c,d,Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(Times(x_,Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)))),-1)),x_Symbol),
    Condition(Plus(Times(d,Log(x),Power(a,-1)),Times(Power(a,-1),Int(Times(Power(x,Plus(n,Negate(C1))),Plus(Times(a,e),Times(CN1,c,d,Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(FreeQ(List(a,c,d,e,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1)),x_Symbol),
    Condition(Plus(Times(d,Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),-1)),Times(CN1,Power(a,-1),Int(Times(Power(x,Plus(m,n)),Simp(Plus(Times(b,d),Times(CN1,a,e),Times(c,d,Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),PositiveIntegerQ(n)),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1)),x_Symbol),
    Condition(Plus(Times(d,Power(x,Plus(m,C1)),Power(Times(a,Plus(m,C1)),-1)),Times(Power(a,-1),Int(Times(Power(x,Plus(m,n)),Plus(Times(a,e),Times(CN1,c,d,Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),PositiveIntegerQ(n)),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1)),x_Symbol),
    Condition(Plus(Times(e,Power(x,Plus(m,Negate(n),C1)),Power(Times(c,Plus(m,Negate(n),C1)),-1)),Times(CN1,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Simp(Plus(Times(a,e),Times(Plus(Times(b,e),Times(CN1,c,d)),Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),PositiveIntegerQ(n)),RationalQ(m)),Greater(Plus(m,Negate(n),C1),C0)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1)),x_Symbol),
    Condition(Plus(Times(e,Power(x,Plus(m,Negate(n),C1)),Power(Times(c,Plus(m,Negate(n),C1)),-1)),Times(CN1,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Plus(Times(a,e),Times(CN1,c,d,Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),PositiveIntegerQ(n)),RationalQ(m)),Greater(Plus(m,Negate(n),C1),C0)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Simp(Plus(Times(d,r),Times(CN1,Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),x),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)),Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Simp(Plus(Times(d,r),Times(Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),x),Power(Plus(q,Times(r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegersQ(m,Times(C1D2,n))),Less(Less(C0,m),n)),CoprimeQ(Plus(m,C1),n)),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Times(C2,c,q),C2))),Plus(Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Simp(Plus(Times(d,r),Times(CN1,Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),x),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)),Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Simp(Plus(Times(d,r),Times(Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),x),Power(Plus(q,Times(r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)))),Not(NegativeQ(Times(C2,c,q))))),And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveQ(Times(a,c))),IntegersQ(m,Times(C1D2,n))),Less(Less(C0,m),n)),CoprimeQ(Plus(m,C1),n)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(Plus(e,Times(Plus(Times(C2,c,d),Times(CN1,b,e)),Power(q,-1))),Int(Times(Power(x,m),Power(Plus(b,Negate(q),Times(C2,c,Power(x,n))),-1)),x)),Times(Plus(e,Times(CN1,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(q,-1))),Int(Times(Power(x,m),Power(Plus(b,q,Times(C2,c,Power(x,n))),-1)),x)))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegersQ(m,n)),Less(Less(C0,m),n)),CoprimeQ(Plus(m,C1),n)),Not(And(And(IntegerQ(Times(C1D2,n)),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PosQ(Times(a,c))))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Times(C2,Rt(Times(CN1,a,c),C2)))),Plus(Times(Plus(e,Times(c,d,Power(Times(C2,q),-1))),Int(Times(Power(x,m),Power(Plus(Negate(q),Times(c,Power(x,n))),-1)),x)),Times(Plus(e,Times(CN1,c,d,Power(Times(C2,q),-1))),Int(Times(Power(x,m),Power(Plus(q,Times(c,Power(x,n))),-1)),x)))),And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),IntegersQ(m,n)),Less(Less(C0,m),n)),CoprimeQ(Plus(m,C1),n)),Not(And(IntegerQ(Times(C1D2,n)),PositiveQ(Times(a,c))))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(c,Power(e,-1),Plus(Times(C2,c,d),Times(CN1,b,e))),C2))),Plus(Times(C1D2,e,Int(Times(Power(x,m),Power(Plus(Times(c,d,Power(e,-1)),Times(CN1,r,x),Times(c,Sqr(x))),-1)),x)),Times(C1D2,e,Int(Times(Power(x,m),Power(Plus(Times(c,d,Power(e,-1)),Times(r,x),Times(c,Sqr(x))),-1)),x)))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))))),PositiveQ(Times(d,Power(e,-1)))),PosQ(Times(c,Power(e,-1),Plus(Times(C2,c,d),Times(CN1,b,e))))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Module(List(Set(r,Rt(Times(C2,Sqr(c),d,Power(e,-1)),C2))),Plus(Times(C1D2,e,Int(Times(Power(x,m),Power(Plus(Times(c,d,Power(e,-1)),Times(CN1,r,x),Times(c,Sqr(x))),-1)),x)),Times(C1D2,e,Int(Times(Power(x,m),Power(Plus(Times(c,d,Power(e,-1)),Times(r,x),Times(c,Sqr(x))),-1)),x)))),And(And(FreeQ(List(a,c,d,e,m),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))))),PositiveQ(Times(d,Power(e,-1)))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Plus(Times(C2,c,q),Times(CN1,b,c)),C2))),Plus(Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Plus(Times(d,r),Times(CN1,Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)),Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Plus(Times(d,r),Times(Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)))),Not(NegativeQ(Plus(Times(C2,c,q),Times(CN1,b,c)))))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NegativeQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),EvenQ(n)),Greater(n,C2)),PosQ(Times(a,c))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(a,c),C2))),Condition(Module(List(Set(r,Rt(Times(C2,c,q),C2))),Plus(Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Plus(Times(d,r),Times(CN1,Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),Power(Plus(q,Times(CN1,r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)),Times(c,Power(Times(C2,q,r),-1),Int(Times(Power(x,m),Plus(Times(d,r),Times(Plus(Times(c,d),Times(CN1,e,q)),Power(x,Times(C1D2,n)))),Power(Plus(q,Times(r,Power(x,Times(C1D2,n))),Times(c,Power(x,n))),-1)),x)))),Not(NegativeQ(Times(C2,c,q))))),And(And(And(And(And(FreeQ(List(a,c,d,e,m),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),EvenQ(n)),Greater(n,C2)),PositiveQ(Times(a,c))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(And(FreeQ(List(a,b,c,d,e,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),IntegersQ(q,m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(FreeQ(List(a,c,d,e,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),IntegersQ(q,m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(x,m),Times(Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),IntegerQ(q)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(x,m),Times(Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(And(FreeQ(List(a,c,d,e,m,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),IntegerQ(q)),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(Power(c,-2),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Plus(Times(c,d),Times(CN1,b,e),Times(c,e,Power(x,n))),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1)))),x)),Times(CN1,Power(c,-2),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Simp(Plus(Times(a,Plus(Times(c,d),Times(CN1,b,e))),Times(Plus(Times(b,c,d),Times(CN1,Sqr(b),e),Times(a,c,e)),Power(x,n))),x),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Greater(q,C0)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(Power(c,-1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Plus(d,Times(e,Power(x,n))),q)),x)),Times(CN1,a,Power(c,-1),Int(Times(Power(x,Plus(m,Times(CN1,C2,n))),Power(Plus(d,Times(e,Power(x,n))),q),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(FreeQ(List(a,c,d,e,q),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n)),Less(Less(C0,Times(C2,n)),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(e,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1)))),x)),Times(CN1,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Simp(Plus(Times(a,e),Times(CN1,Plus(Times(c,d),Times(CN1,b,e)),Power(x,n))),x),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Greater(q,C0)),And(Less(Less(C0,n),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,n)))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(e,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1)))),x)),Times(CN1,Power(c,-1),Int(Times(Power(x,Plus(m,Negate(n))),Simp(Plus(Times(a,e),Times(CN1,c,d,Power(x,n))),x),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Greater(q,C0)),And(Less(Less(C0,n),Plus(m,C1)),LessEqual(Plus(m,C1),Times(C2,n)))))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(d,Power(a,-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1)))),x)),Times(CN1,Power(a,-1),Int(Times(Power(x,Plus(m,n)),Simp(Plus(Times(b,d),Times(CN1,a,e),Times(c,d,Power(x,n))),x),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Greater(q,C0)),Less(m,C0)),Greater(n,C0)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(d,Power(a,-1),Int(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1)))),x)),Times(Power(a,-1),Int(Times(Power(x,Plus(m,n)),Simp(Plus(Times(a,e),Times(CN1,c,d,Power(x,n))),x),Power(Plus(d,Times(e,Power(x,n))),Plus(q,Negate(C1))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Greater(q,C0)),Less(m,C0)),Greater(n,C0)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(CN1,d,e,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1),Int(Times(Power(x,Plus(m,Negate(n))),Power(Plus(d,Times(e,Power(x,n))),q)),x)),Times(Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1),Int(Times(Power(x,Plus(m,Negate(n))),Plus(Times(a,e),Times(c,d,Power(x,n))),Power(Plus(d,Times(e,Power(x,n))),Plus(q,C1)),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Less(q,C0)),Less(Less(C0,n),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Plus(Times(CN1,d,e,Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1),Int(Times(Power(x,Plus(m,Negate(n))),Power(Plus(d,Times(e,Power(x,n))),q)),x)),Times(Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1),Int(Times(Power(x,Plus(m,Negate(n))),Plus(Times(a,e),Times(c,d,Power(x,n))),Power(Plus(d,Times(e,Power(x,n))),Plus(q,C1)),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x))),And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),RationalQ(m,n,q)),Less(q,C0)),Less(Less(C0,n),Plus(m,C1))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(d,Times(e,Power(x,n))),q),Times(Power(x,m),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(And(And(FreeQ(List(a,b,c,d,e,q,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Plus(d,Times(e,Power(x,n))),q),Times(Power(x,m),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1)),x),x),And(And(And(And(FreeQ(List(a,c,d,e,q,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q)),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),-1),x),x),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m,q,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(q))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))),-1),Power(Plus(d_,Times(e_DEFAULT,Power(x_,n_))),q_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(x,m),Power(Plus(d,Times(e,Power(x,n))),q)),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),-1),x),x),And(And(And(And(FreeQ(List(a,c,d,e,m,q,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(q))),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(A_DEFAULT,Times(B_DEFAULT,Power(x_,n_))),Power(Times(x_,Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT)),Times(b_DEFAULT,Power(x_,n_))))),-1)),x_Symbol),
    Condition(Plus(Times(ASymbol,Int(Power(Times(x,Sqrt(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))))),-1),x)),Times(BSymbol,Int(Times(Power(x,Plus(n,Negate(C1))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),CN1D2)),x))),And(And(FreeQ(List(a,b,c,ASymbol,BSymbol,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Plus(A_DEFAULT,Times(B_DEFAULT,Power(x_,n_))),Power(Times(x_,Sqrt(Plus(a_,Times(c_DEFAULT,Power(x_,j_DEFAULT))))),-1)),x_Symbol),
    Condition(Plus(Times(ASymbol,Int(Power(Times(x,Sqrt(Plus(a,Times(c,Power(x,Times(C2,n)))))),-1),x)),Times(BSymbol,Int(Times(Power(x,Plus(n,Negate(C1))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),CN1D2)),x))),And(FreeQ(List(a,c,ASymbol,BSymbol,n),x),ZeroQ(Plus(j,Times(CN1,C2,n)))))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(BSymbol,Plus(m,C1),Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p),Power(Times(Plus(m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1)),Times(n,p,Power(Times(Plus(m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1),Int(Times(Power(x,Plus(n,m)),Simp(Plus(Times(C2,a,BSymbol,Plus(m,C1)),Times(CN1,ASymbol,b,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(Plus(Times(b,BSymbol,Plus(m,C1)),Times(CN1,C2,c,ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1))),Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(n)),RationalQ(m,p)),Greater(p,C0)),LessEqual(m,Negate(n))),Unequal(Plus(m,C1),C0)),Unequal(Plus(m,Times(n,Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(BSymbol,Plus(m,C1),Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),p),Power(Times(Plus(m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1)),Times(C2,n,p,Power(Times(Plus(m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1),Int(Times(Power(x,Plus(n,m)),Plus(Times(a,BSymbol,Plus(m,C1)),Times(CN1,c,ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1),Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(n)),RationalQ(m,p)),Greater(p,C0)),LessEqual(m,Negate(n))),Unequal(Plus(m,C1),C0)),Unequal(Plus(m,Times(n,Plus(Times(C2,p),C1)),C1),C0)))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(b,BSymbol,n,p),Times(c,ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(c,BSymbol,Plus(Times(C2,n,p),m,C1),Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),p),Power(Times(c,Plus(Times(C2,n,p),m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1)),Times(n,p,Power(Times(c,Plus(Times(C2,n,p),m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1),Int(Times(Power(x,m),Simp(Plus(Times(C2,a,c,ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(CN1,a,b,BSymbol,Plus(m,C1)),Times(Plus(Times(C2,a,c,BSymbol,Plus(Times(C2,n,p),m,C1)),Times(ASymbol,b,c,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(CN1,Sqr(b),BSymbol,Plus(m,Times(n,p),C1))),Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(n)),RationalQ(m,p)),Greater(p,C0)),Greater(m,Negate(n))),Unequal(Plus(Times(C2,n,p),m,C1),C0)),Unequal(Plus(m,Times(n,Plus(Times(C2,p),C1)),C1),C0)),Unequal(Plus(m,C1),n)))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,C1)),Plus(Times(c,ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(c,BSymbol,Plus(Times(C2,n,p),m,C1),Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),p),Power(Times(c,Plus(Times(C2,n,p),m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1)),Times(C2,a,n,p,Power(Times(Plus(Times(C2,n,p),m,C1),Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),-1),Int(Times(Power(x,m),Plus(Times(ASymbol,Plus(m,Times(n,Plus(Times(C2,p),C1)),C1)),Times(BSymbol,Plus(Times(C2,n,p),m,C1),Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(n)),RationalQ(m,p)),Greater(p,C0)),Greater(m,Negate(n))),Unequal(Plus(Times(C2,n,p),m,C1),C0)),Unequal(Plus(m,Times(n,Plus(Times(C2,p),C1)),C1),C0)),Unequal(Plus(m,C1),n)))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Negate(n),C1)),Plus(Times(ASymbol,b),Times(CN1,C2,a,BSymbol),Times(CN1,Plus(Times(b,BSymbol),Times(CN1,C2,c,ASymbol)),Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(n,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Times(Power(Times(n,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(x,Plus(m,Negate(n))),Simp(Plus(Times(Plus(n,Negate(m),Negate(C1)),Plus(Times(ASymbol,b),Times(CN1,C2,a,BSymbol))),Times(Plus(Times(C2,n,p),Times(C2,n),m,C1),Plus(Times(b,BSymbol),Times(CN1,C2,c,ASymbol)),Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(n)),RationalQ(m,p)),Less(p,CN1)),Greater(m,Plus(n,Negate(C1)))))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(x,Plus(m,Negate(n),C1)),Plus(Times(a,BSymbol),Times(CN1,c,ASymbol,Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(C2,a,c,n,Plus(p,C1)),-1)),Times(Power(Times(C2,a,c,n,Plus(p,C1)),-1),Int(Times(Power(x,Plus(m,Negate(n))),Plus(Times(a,BSymbol,Plus(n,Negate(m),Negate(C1))),Times(c,ASymbol,Plus(Times(C2,n,p),Times(C2,n),m,C1),Power(x,n))),Power(Plus(a,Times(c,Power(x,Times(C2,n)))),Plus(p,C1))),x))),And(And(And(And(And(FreeQ(List(a,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),PositiveIntegerQ(n)),RationalQ(m,p)),Less(p,CN1)),Greater(m,Plus(n,Negate(C1)))))),
ISetDelayed(Int(Times(Plus(A_,Times(B_DEFAULT,Power(x_,n_))),Power(x_,m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,j_)),Times(b_DEFAULT,Power(x_,n_))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,Power(x,Plus(m,C1)),Plus(Times(ASymbol,Plus(Sqr(b),Times(CN1,C2,a,c))),Times(CN1,a,b,BSymbol),Times(Plus(Times(ASymbol,b),Times(CN1,C2,a,BSymbol)),c,Power(x,n))),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1)),Power(Times(a,n,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Times(Power(Times(a,n,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(x,m),Simp(Plus(Times(ASymbol,Plus(Times(Sqr(b),Plus(m,Times(n,Plus(p,C1)),C1)),Times(CN1,C2,a,c,Plus(m,Times(C2,n,Plus(p,C1)),C1)))),Times(CN1,a,b,BSymbol,Plus(m,C1)),Times(Plus(m,Times(n,Plus(Times(C2,p),C3)),C1),Plus(Times(ASymbol,b),Times(CN1,C2,a,BSymbol)),c,Power(x,n))),x),Power(Plus(a,Times(b,Power(x,n)),Times(c,Power(x,Times(C2,n)))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,ASymbol,BSymbol),x),ZeroQ(Plus(j,Times(CN1,C2,n)))),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),PositiveIntegerQ(n)),RationalQ(m,p)),Less(p,CN1)),Less(m,Plus(n,Negate(C1))))))
  );
}
