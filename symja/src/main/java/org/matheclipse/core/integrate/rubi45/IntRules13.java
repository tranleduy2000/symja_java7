package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules13 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),m),Cancel(Times(Power(Plus(Times(C1D2,b),Times(c,x)),Times(C2,p)),Power(Power(c,p),-1)))),x),And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(e,m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Times(C1D2,Plus(m,C1)))),Power(Times(Power(c,Times(C1D2,Plus(m,C1))),Plus(m,Times(C2,p),C1)),-1)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),OddQ(m)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Log(RemoveContent(Plus(d,Times(e,x)),x)),Power(e,-1)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),ZeroQ(Plus(m,Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,Times(C2,p),C1)),-1)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(CN1,Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Plus(m,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),ZeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,C1))))),
ISetDelayed(Int(Times(Sqrt(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),-2)),x_Symbol),
    Condition(Times(Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Plus(b,Times(C2,c,x)),-1),Int(Times(Plus(b,Times(C2,c,x)),Power(Plus(d,Times(e,x)),-2)),x)),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Sqrt(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Times(e,Plus(m,C2)),-1)),Times(CN1,Plus(Times(C2,c,d),Times(CN1,b,e)),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Times(e,Plus(m,C2),Plus(b,Times(C2,c,x))),-1),Int(Power(Plus(d,Times(e,x)),m),x))),And(And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,C2))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))),Sqr(Plus(d_DEFAULT,Times(e_DEFAULT,x_)))),-1),x_Symbol),
    Condition(Plus(Times(CN4,c,e,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Times(Sqr(Plus(Times(C2,c,d),Times(CN1,b,e))),Plus(d,Times(e,x))),-1)),Times(C2,c,Power(Plus(Times(C2,c,d),Times(CN1,b,e)),-1),Int(Power(Times(Plus(d,Times(e,x)),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x))))),-1),x))),And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN2,c,e,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Plus(Times(m,p),Negate(C1)),Sqr(Plus(Times(C2,c,d),Times(CN1,b,e)))),-1)),Times(CN1,Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Plus(m,C2),Plus(Times(C2,c,d),Times(CN1,b,e))),-1))),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),ZeroQ(Plus(m,Times(C2,p),C3))),NonzeroQ(Plus(m,C2))))),
ISetDelayed(Int(Times(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(C2,c,Plus(p,C1)),-1)),Times(Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(C2,c),-1),Int(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),x))),And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(p,QQ(3L,2L)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,C1)),-1)),Times(CN1,p,Power(Plus(d,Times(e,x)),Plus(m,C2)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1))),Power(Times(Sqr(e),Plus(m,C1),Plus(m,Times(C2,p),C1)),-1)),Times(p,Plus(Times(C2,p),Negate(C1)),Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(Sqr(e),Plus(m,C1),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Greater(p,C1)),And(LessEqual(CN2,m),Less(m,CN1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,C1)),-1)),Times(CN1,p,Power(Plus(d,Times(e,x)),Plus(m,C2)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1))),Power(Times(Sqr(e),Plus(m,C1),Plus(m,C2)),-1)),Times(C2,c,p,Plus(Times(C2,p),Negate(C1)),Power(Times(Sqr(e),Plus(m,C1),Plus(m,C2)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Greater(p,C1)),Less(m,CN2)),Not(And(NegativeIntegerQ(Plus(m,Times(C2,p),C3)),Greater(Plus(m,Times(C3,p),C3),C0)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,e,Plus(m,Times(C2,p),C2),Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Plus(p,C1),Plus(Times(C2,p),C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Plus(Times(C2,p),C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),Times(Sqr(e),m,Plus(m,Times(C2,p),C2),Power(Times(Plus(p,C1),Plus(Times(C2,p),C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Less(p,CN1)),And(Less(C0,m),LessEqual(m,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,e,m,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(C2,c,Plus(p,C1),Plus(Times(C2,p),C1)),-1)),Times(Power(Plus(d,Times(e,x)),m),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(C2,c,Plus(Times(C2,p),C1)),-1)),Times(Sqr(e),m,Plus(m,Negate(C1)),Power(Times(C2,c,Plus(p,C1),Plus(Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C2))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Less(p,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,Times(C2,p),C1)),-1)),Times(CN1,p,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1))),Power(Times(C2,c,Sqr(e),Plus(m,Times(C2,p)),Plus(m,Times(C2,p),C1)),-1)),Times(p,Plus(Times(C2,p),Negate(C1)),Sqr(Plus(Times(C2,c,d),Times(CN1,b,e))),Power(Times(C2,c,Sqr(e),Plus(m,Times(C2,p)),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(p)),Greater(p,C0)),NonzeroQ(Plus(m,Times(C2,p)))),NonzeroQ(Plus(m,Times(C2,p),C1))),Not(And(NegativeIntegerQ(Plus(m,Times(C2,p),C3)),Greater(Plus(m,Times(C3,p),C3),C0)))),Not(And(RationalQ(m),Less(m,CN2)))),Not(And(And(IntegerQ(m),Greater(m,C0)),Or(Not(IntegerQ(Times(C2,p))),Less(m,Times(C2,p)))))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN2,c,e,Plus(m,Times(C2,p),C2),Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Plus(p,C1),Plus(Times(C2,p),C1),Sqr(Plus(Times(C2,c,d),Times(CN1,b,e)))),-1)),Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Plus(Times(C2,p),C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),Times(C2,c,Sqr(e),Plus(m,Times(C2,p),C2),Plus(m,Times(C2,p),C3),Power(Times(Plus(p,C1),Plus(Times(C2,p),C1),Sqr(Plus(Times(C2,c,d),Times(CN1,b,e)))),-1),Int(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(p)),Less(p,CN1)),NonzeroQ(Plus(m,p,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),m),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(C2,c,Plus(m,Times(C2,p),C1)),-1)),Times(m,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(C2,c,Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m)),Greater(m,C0)),NonzeroQ(Plus(m,Times(C2,p),C1))),Or(Or(Or(Not(RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),And(IntegerQ(m),Less(Less(C0,m),Times(C2,p)))),And(Equal(m,C1D2),Less(p,C0)))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,Power(Plus(d,Times(e,x)),Plus(m,C1)),Plus(b,Times(C2,c,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Plus(m,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),Times(C2,c,Plus(m,Times(C2,p),C2),Power(Times(Plus(m,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m)),Less(m,CN1)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Power(Plus(Times(C1D2,b),Times(c,x)),Times(C2,p)),-1),Int(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(Times(C1D2,b),Times(c,x)),Times(C2,p))),x)),And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),ZeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),Not(IntegerQ(p))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),Plus(m,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),x)),p)),x),And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),Plus(m,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),x)),p)),x),And(And(FreeQ(List(a,c,d,e,m),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),IntegerQ(p)))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))),Sqrt(Plus(d_DEFAULT,Times(e_DEFAULT,x_)))),-1),x_Symbol),
    Condition(Times(C2,e,Subst(Int(Power(Plus(Times(C2,c,d),Times(CN1,b,e),Times(Sqr(e),Sqr(x))),-1),x),x,Times(Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Plus(d,Times(e,x)),CN1D2)))),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(a_,Times(c_DEFAULT,Sqr(x_)))),Sqrt(Plus(d_DEFAULT,Times(e_DEFAULT,x_)))),-1),x_Symbol),
    Condition(Times(C2,e,Subst(Int(Power(Plus(Times(C2,c,d),Times(Sqr(e),Sqr(x))),-1),x),x,Times(Sqrt(Plus(a,Times(c,Sqr(x)))),Power(Plus(d,Times(e,x)),CN1D2)))),And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(p,C1)),-1)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),ZeroQ(Plus(m,p))),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(p,C1)),-1)),And(And(And(FreeQ(List(a,c,d,e,m,p),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),ZeroQ(Plus(m,p))),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(e,Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Plus(p,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),And(And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),ZeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(p,C1))),NonzeroQ(Plus(p,C2))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(e,Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(C2,c,d,Plus(p,C1)),-1)),And(And(And(And(FreeQ(List(a,c,d,e,m,p),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),ZeroQ(Plus(m,Times(C2,p),C2))),NonzeroQ(Plus(p,C1))),NonzeroQ(Plus(p,C2))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Sqr(e),Plus(m,Times(C2,p),C1)),-1)),Times(CN1,p,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(Sqr(e),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Greater(p,C0)),Or(And(LessEqual(CN1,m),Less(m,C0)),Equal(Plus(m,p,C1),C0))),NonzeroQ(Plus(m,Times(C2,p),C1))),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Sqr(x))),p),Power(Times(Sqr(e),Plus(m,Times(C2,p),C1)),-1)),Times(CN1,C2,c,d,p,Power(Times(Sqr(e),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Greater(p,C0)),Or(And(LessEqual(CN1,m),Less(m,C0)),Equal(Plus(m,p,C1),C0))),NonzeroQ(Plus(m,Times(C2,p),C1))),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,p,C1)),-1)),Times(CN1,c,p,Power(Times(Sqr(e),Plus(m,p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Greater(p,C0)),Less(m,CN1)),NonzeroQ(Plus(m,p,C1))),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Sqr(x))),p),Power(Times(e,Plus(m,p,C1)),-1)),Times(CN1,c,p,Power(Times(Sqr(e),Plus(m,p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(Plus(a,Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Greater(p,C0)),Less(m,CN1)),NonzeroQ(Plus(m,p,C1))),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(e,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Times(CN1,e,Plus(Times(C2,c,d),Times(CN1,b,e)),Plus(m,Times(C2,p),C2),Power(Times(e,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Less(p,CN1)),And(Less(C0,m),LessEqual(m,C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(CN1,d,Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(C2,a,e,Plus(p,C1)),-1)),Times(d,Plus(m,Times(C2,p),C2),Power(Times(C2,a,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Less(p,CN1)),And(Less(C0,m),LessEqual(m,C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(p,C1)),-1)),Times(CN1,Sqr(e),Plus(m,p),Power(Times(c,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C2))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Less(p,CN1)),Greater(m,C1)),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(p,C1)),-1)),Times(CN1,Sqr(e),Plus(m,p),Power(Times(c,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C2))),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,c,d,e),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m,p)),Less(p,CN1)),Greater(m,C1)),Not(NegativeIntegerQ(Plus(m,Times(C2,p),C2)))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(m,Times(C2,p),C1)),-1)),Times(Plus(m,p),Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(c,Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m)),Or(GreaterEqual(m,C1),PositiveIntegerQ(Plus(m,p)))),NonzeroQ(Plus(m,Times(C2,p),C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Plus(Times(e,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(c,Plus(m,Times(C2,p),C1)),-1)),Times(C2,c,d,Plus(m,p),Power(Times(c,Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,d,e,p),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m)),Or(GreaterEqual(m,C1),PositiveIntegerQ(Plus(m,p)))),NonzeroQ(Plus(m,Times(C2,p),C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,e,Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Plus(m,p,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1)),Times(c,Plus(m,Times(C2,p),C2),Power(Times(Plus(m,p,C1),Plus(Times(C2,c,d),Times(CN1,b,e))),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m)),Less(m,C0)),NonzeroQ(Plus(m,p,C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN1,e,Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(c,Sqr(x))),Plus(p,C1)),Power(Times(C2,c,d,Plus(m,p,C1)),-1)),Times(Plus(m,Times(C2,p),C2),Power(Times(C2,d,Plus(m,p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(FreeQ(List(a,c,d,e,p),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NonzeroQ(Plus(m,p))),NonzeroQ(Plus(m,Times(C2,p),C2))),RationalQ(m)),Less(m,C0)),NonzeroQ(Plus(m,p,C1))),IntegerQ(Times(C2,p))))),
ISetDelayed(Int(Times(Power(Plus(Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Times(e_DEFAULT,x_),m_)),x_Symbol),
    Condition(Times(Power(Times(e,x),m),Power(Plus(Times(b,x),Times(c,Sqr(x))),p),Power(Times(Power(x,Plus(m,p)),Power(Plus(b,Times(c,x)),p)),-1),Int(Times(Power(x,Plus(m,p)),Power(Plus(b,Times(c,x)),p)),x)),And(FreeQ(List(b,c,e,m),x),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Plus(d,Times(e,x)),Plus(m,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),x)),p)),x),And(And(And(And(FreeQ(List(a,c,d,e,m),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(p))),PositiveQ(a)),PositiveQ(d)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(Times(a,Power(d,-1)),Times(c,x,Power(e,-1))),p)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),x)),p)),x)),And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_DEFAULT)),x_Symbol),
    Condition(Times(Power(Plus(a,Times(c,Sqr(x))),p),Power(Times(Power(Plus(d,Times(e,x)),p),Power(Plus(Times(a,Power(d,-1)),Times(c,x,Power(e,-1))),p)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Power(e,-1),x)),p)),x)),And(And(FreeQ(List(a,c,d,e,m),x),ZeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,x_)),Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),-1)),x_Symbol),
    Condition(Times(d,Power(b,-1),Log(RemoveContent(Plus(a,Times(b,x),Times(c,Sqr(x))),x))),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,x_)),Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT)),x_Symbol),
    Condition(Times(d,Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(b,Plus(p,C1)),-1)),And(And(And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),-1),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Module(List(Set(n,Denominator(m))),Times(CN4,c,e,n,Subst(Int(Times(Power(x,Plus(Times(n,Plus(m,C1)),Negate(C1))),Power(Plus(Times(Sqr(e),Plus(Sqr(b),Times(CN1,C4,a,c))),Times(CN1,C4,Sqr(c),Power(x,Times(C2,n)))),-1)),x),x,Power(Plus(d,Times(e,x)),Power(n,-1))))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),RationalQ(m)),Less(Less(CN1,m),C1)))),
ISetDelayed(Int(Power(Times(Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_)))),Sqrt(Plus(d_,Times(e_DEFAULT,x_)))),-1),x_Symbol),
    Condition(Times(CN2,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))),Power(Times(Power(Plus(Sqr(b),Times(CN1,C4,a,c)),C1D4),Sqrt(Plus(b,Times(C2,c,x))),Sqrt(Plus(d,Times(e,x))),Sqrt(Times(c,Plus(a,Times(b,x),Times(c,Sqr(x))),Power(Plus(b,Times(C2,c,x)),-2)))),-1),EllipticF(ArcSin(Times(Power(Plus(Sqr(b),Times(CN1,C4,a,c)),C1D4),Power(Plus(b,Times(C2,c,x)),CN1D2))),CN1)),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),CN1D2),Sqrt(Plus(d_,Times(e_DEFAULT,x_)))),x_Symbol),
    Condition(Plus(Times(C2,Power(Plus(Sqr(b),Times(CN1,C4,a,c)),QQ(3L,4L)),Sqrt(Plus(d,Times(e,x))),Sqrt(Times(CN1,c,Plus(a,Times(b,x),Times(c,Sqr(x))),Power(Plus(Sqr(b),Times(CN1,C4,a,c)),-1))),Power(Times(c,Sqrt(Plus(b,Times(C2,c,x))),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x))))),-1),EllipticE(ArcSin(Times(Sqrt(Plus(b,Times(C2,c,x))),Power(Plus(Sqr(b),Times(CN1,C4,a,c)),CN1D4))),CN1)),Times(CN1,d,Sqrt(Plus(Sqr(b),Times(CN1,C4,a,c))),Power(b,-1),Int(Power(Times(Sqrt(Plus(d,Times(e,x))),Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x))))),-1),x))),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Power(Times(Plus(d_,Times(e_DEFAULT,x_)),Sqrt(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))))),-1),x_Symbol),
    Condition(Times(C4,c,Subst(Int(Power(Plus(Times(Sqr(b),e),Times(CN1,C4,a,c,e),Times(C4,c,e,Sqr(x))),-1),x),x,Sqrt(Plus(a,Times(b,x),Times(c,Sqr(x)))))),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Power(Times(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),Plus(d_,Times(e_DEFAULT,x_))),-1),x_Symbol),
    Condition(Plus(Times(CN4,b,c,Power(Times(d,Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Power(Plus(b,Times(C2,c,x)),-1),x)),Times(Sqr(b),Power(Times(Sqr(d),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Plus(d,Times(e,x)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),-1)),x))),And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Times(C2,c,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(e,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),And(And(And(And(FreeQ(List(a,b,c,d,e,m,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),ZeroQ(Plus(m,Times(C2,p),C3))),NonzeroQ(Plus(p,C1))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x),x),And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),PositiveIntegerQ(p)),Not(And(And(OddQ(m),And(Less(C0,m),LessEqual(m,C3))),Unequal(p,C1)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,C1)),-1)),Times(CN1,b,p,Power(Times(d,e,Plus(m,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Less(m,CN1)),Greater(p,C0)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(d,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(b,Plus(p,C1)),-1)),Times(CN1,d,e,Plus(m,Negate(C1)),Power(Times(b,Plus(p,C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C2))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m,p)),Less(p,CN1)),Greater(m,C1)))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p),Power(Times(e,Plus(m,Times(C2,p),C1)),-1)),Times(CN1,d,p,Plus(Sqr(b),Times(CN1,C4,a,c)),Power(Times(b,e,Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,Negate(C1)))),x))),And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(p)),Greater(p,C0)),Not(And(RationalQ(m),Less(m,CN1)))),Not(And(And(OddQ(m),Greater(m,C0)),Or(Not(IntegerQ(p)),Less(m,Times(C2,p)))))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(C2,c,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(e,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Times(CN1,C2,c,e,Plus(m,Times(C2,p),C3),Power(Times(e,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(Plus(d,Times(e,x)),m),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1))),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,m),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(p)),Less(p,CN1)),Not(And(RationalQ(m),Greater(m,C1)))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(C2,d,Power(Plus(d,Times(e,x)),Plus(m,Negate(C1))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(b,Plus(m,Times(C2,p),C1)),-1)),Times(Sqr(d),Plus(m,Negate(C1)),Plus(Sqr(b),Times(CN1,C4,a,c)),Power(Times(Sqr(b),Plus(m,Times(C2,p),C1)),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,Negate(C2))),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m)),Greater(m,C1)),Not(And(RationalQ(p),Less(p,CN1)))),NonzeroQ(Plus(m,Times(C2,p),C1))),Or(Or(Not(RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0))),OddQ(m))))),
ISetDelayed(Int(Times(Power(Plus(a_DEFAULT,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),p_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,x_)),m_)),x_Symbol),
    Condition(Plus(Times(CN2,b,d,Power(Plus(d,Times(e,x)),Plus(m,C1)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),Plus(p,C1)),Power(Times(Sqr(d),Plus(m,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Times(Sqr(b),Plus(m,Times(C2,p),C3),Power(Times(Sqr(d),Plus(m,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(Plus(d,Times(e,x)),Plus(m,C2)),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x))),And(And(And(And(And(And(FreeQ(List(a,b,c,d,e,p),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),ZeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NonzeroQ(Plus(m,Times(C2,p),C3))),RationalQ(m)),Less(m,CN1)),Or(Not(RationalQ(p)),And(LessEqual(CN1,p),Less(p,C0)))))),
ISetDelayed(Int(Times(Plus(d_DEFAULT,Times(e_DEFAULT,x_)),Power(Plus(a_,Times(b_DEFAULT,x_),Times(c_DEFAULT,Sqr(x_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Times(Plus(Times(c,d),Times(CN1,e,Plus(Times(C1D2,b),Times(CN1,C1D2,q)))),Power(q,-1),Int(Power(Plus(Times(C1D2,b),Times(CN1,C1D2,q),Times(c,x)),-1),x)),Times(CN1,Plus(Times(c,d),Times(CN1,e,Plus(Times(C1D2,b),Times(C1D2,q)))),Power(q,-1),Int(Power(Plus(Times(C1D2,b),Times(C1D2,q),Times(c,x)),-1),x)))),And(And(And(And(FreeQ(List(a,b,c,d,e),x),NonzeroQ(Plus(Sqr(b),Times(CN1,C4,a,c)))),NonzeroQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))))),NonzeroQ(Plus(Times(C2,c,d),Times(CN1,b,e)))),NiceSqrtQ(Plus(Sqr(b),Times(CN1,C4,a,c)))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,x_)),Power(Plus(a_,Times(c_DEFAULT,Sqr(x_))),-1)),x_Symbol),
    Condition(Module(List(Set(q,Rt(Times(CN1,a,c),C2))),Plus(Times(Plus(Times(C1D2,e),Times(c,d,Power(Times(C2,q),-1))),Int(Power(Plus(Negate(q),Times(c,x)),-1),x)),Times(Plus(Times(C1D2,e),Times(CN1,c,d,Power(Times(C2,q),-1))),Int(Power(Plus(q,Times(c,x)),-1),x)))),And(And(FreeQ(List(a,c,d,e),x),NonzeroQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))))),NiceSqrtQ(Times(CN1,a,c)))))
  );
}
